CREATE DATABASE sqlReview;

DROP TABLE IF EXISTS CITES:
DROP TABLE IF EXISTS SUBMITS;
DROP TABLE IF EXISTS WRITES;
DROP TABLE IF EXISTS PAPER;
DROP TABLE IF EXISTS AUTHOR;
DROP TABLE IF EXISTS CONFERENCE;


CREATE TABLE paper(
    PAPERID INT PRIMARY KEY NOT NULL,
    TITLE  TEXT NOT NULL,
    ABSTRACT TEXT NOT NULL
);

 CREATE TABLE author(
    AUTHORID INT PRIMARY KEY NOT NULL,
    NAME  TEXT NOT NULL,
    EMAIL TEXT NOT NULL,
    AFFILIATION TEXT NOT NULL
);

 CREATE TABLE conference(
    CONFID INT PRIMARY KEY NOT NULL,
    NAME  TEXT NOT NULL,
    RANKING INT NOT NULL
);

 CREATE TABLE writes(
    AUTHORID INT NOT NULL,
    PAPERID INT NOT NULL,
    PRIMARY KEY(authorID, paperID),
    FOREIGN KEY(authorID) REFERENCES author(authorID)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY(paperID) REFERENCES paper(paperID)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE submits(
    PAPERID INT NOT NULL,
    CONFID INT NOT NULL,
    ISACCEPTED BOOLEAN NOT NULL,
    DATE_S DATE NOT NULL DEFAULT CURRENT_DATE,
    PRIMARY KEY(paperID, confID),
    FOREIGN KEY(paperID) REFERENCES paper(paperID)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY(confID) REFERENCES conference(confID)
        ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE cites(
    PAPERIDFROM INT NOT NULL,
    PAPERIDTO INT NOT NULL,
    PRIMARY KEY(paperIDfrom, paperIDto),
    FOREIGN KEY(paperIDfrom) REFERENCES paper(paperID)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY(paperIDto) REFERENCES paper(paperID)
        ON DELETE RESTRICT ON UPDATE CASCADE
);
